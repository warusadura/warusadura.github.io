<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>Dhanuka's web log</title><link href="https://dnuka.github.io/" rel="alternate"></link><link href="https://dnuka.github.io/rss.xml" rel="self"></link><id>https://dnuka.github.io/</id><updated>2021-08-19T12:40:00+05:30</updated><entry><title>GSoC 21: Final report</title><link href="https://dnuka.github.io/gsoc21-final-report.html" rel="alternate"></link><published>2021-08-19T12:40:00+05:30</published><updated>2021-08-19T12:40:00+05:30</updated><author><name>dnuka</name></author><id>tag:dnuka.github.io,2021-08-19:/gsoc21-final-report.html</id><summary type="html">&lt;p&gt;This is my last GSoC blog post. And the purpose of writing this blog post is to share the work I have completed during the past 10 weeks of Google Summer of Code 2021.&lt;/p&gt;
&lt;h4&gt;Google Summer of Code 2021 Report:&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;Project: &lt;a href="https://summerofcode.withgoogle.com/projects/#4610209823064064"&gt;GNOME/libsecret: Extend file backend to use TPM2 derived â€¦&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;</summary><content type="html">&lt;p&gt;This is my last GSoC blog post. And the purpose of writing this blog post is to share the work I have completed during the past 10 weeks of Google Summer of Code 2021.&lt;/p&gt;
&lt;h4&gt;Google Summer of Code 2021 Report:&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;Project: &lt;a href="https://summerofcode.withgoogle.com/projects/#4610209823064064"&gt;GNOME/libsecret: Extend file backend to use TPM2 derived encryption keys&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;The current implementation of libsecret's file backend uses an encryption key derived from the user's login password. Security wise this not an ideal situation. Because, the entire security of the file backend relies on the user's login password (single point of failure). This situation can be improved if the keys are protected/generated by hardware. A Trusted Platform Module (TPM) is a cryptographic hardware security module (a microcontroller) that's present on modern consumer notebooks. The proposed work involves extending current libsecret file backend design to work with a TPM.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;GSoC project status: &lt;a href="https://gitlab.gnome.org/Teams/Engagement/gsoc-2021/-/issues/13"&gt;&lt;strong&gt;&lt;code&gt;Completed&lt;/code&gt;&lt;/strong&gt;&lt;/a&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Main repository: &lt;a href="https://gitlab.gnome.org/GNOME/libsecret/"&gt;https://gitlab.gnome.org/GNOME/libsecret/&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Read-only mirror: &lt;a href="https://github.com/GNOME/libsecret"&gt;https://github.com/GNOME/libsecret&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Project update talk: &lt;a href="https://youtu.be/DjmL5YbcPEQ?t=6178"&gt;https://youtu.be/DjmL5YbcPEQ?t=6178&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Slides: &lt;a href="https://dnuka.github.io/slides/libsecret-project-update-by-Dhanuka.pdf"&gt;{static}/slides/libsecret-project-update-by-Dhanuka.pdf&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Toy project: &lt;a href="https://github.com/dnuka/tpmsecret"&gt;https://github.com/dnuka/tpmsecret&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Merge Requests list: &lt;a href="https://gitlab.gnome.org/GNOME/libsecret/-/merge_requests?scope=all&amp;amp;state=merged&amp;amp;author_username=dnuka"&gt;https://gitlab.gnome.org/GNOME/libsecret/-/merge_requests?scope=all&amp;amp;state=merged&amp;amp;author_username=dnuka&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Blog posts:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://dnuka.github.io/gsoc21-internship.html"&gt;GSoC 21: Contributing to Gnome libsecret&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://dnuka.github.io/gsoc21-internship-update.html"&gt;GSoC 21: GNOME/libsecret project update&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://dnuka.github.io/gsoc21-final-report.html"&gt;GSoC 21: Final report&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The following section summarize all of the merge requests I have created. You can find more information on them using the attached links.&lt;/p&gt;
&lt;h4&gt;Merge Requests directly related to the GSoC Project.&lt;/h4&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;merged:&lt;/code&gt;&lt;/strong&gt; &lt;a href="https://gitlab.gnome.org/GNOME/libsecret/-/merge_requests/86"&gt;Enable TPM emulator in CI&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;This is my very first merge request directly related to the GSoC project. This enables the TPM emulator inside the CI environment. This is required for testing purposes.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;merged:&lt;/code&gt;&lt;/strong&gt; &lt;a href="https://gitlab.gnome.org/GNOME/libsecret/-/merge_requests/87"&gt;Add --allow-root flag to tpm2-abrmd CI script&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Related to the above merge request. This fixes an issue related to the TPM emulator execution inside the CI.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;merged:&lt;/code&gt;&lt;/strong&gt; &lt;a href="https://gitlab.gnome.org/GNOME/libsecret/-/merge_requests/83"&gt;Add TPM2 API and its implementations to egg&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;This is my most import work during the GSoC. This merge request defines the public TPM2 API for libsecret and adds its implementations to the incubation area (\egg directory). You can read more about this from my &lt;a href="https://dnuka.github.io/gsoc21-internship-update.html"&gt;project update blog post&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;merged:&lt;/code&gt;&lt;/strong&gt; &lt;a href="https://gitlab.gnome.org/GNOME/libsecret/-/merge_requests/91"&gt;TPM2: Fix primary key generation in decrypting&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;During the integration task we have discovered a bug related to primary key generation when there is no primary key present. So, this MR fixes that issue.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;merged:&lt;/code&gt;&lt;/strong&gt; &lt;a href="https://gitlab.gnome.org/GNOME/libsecret/-/merge_requests/90"&gt;Add TPM2 integration to secret file backend&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;This is the integration task. This merge request uses the newly define TPM2 API to extend the libsecret's file backend to use an encryption key derived from a TPM.&lt;/p&gt;
&lt;h4&gt;Other Merge Requests.&lt;/h4&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;wip:&lt;/code&gt;&lt;/strong&gt; &lt;a href="https://gitlab.gnome.org/GNOME/libsecret/-/merge_requests/93"&gt;Fix deprecated-declaration warnings&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;This merge request fixes the existing &lt;code&gt;deprecated-declarations&lt;/code&gt; warnings generated during the libsecret &lt;code&gt;build&lt;/code&gt; process.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;merged:&lt;/code&gt;&lt;/strong&gt; &lt;a href="https://gitlab.gnome.org/GNOME/libsecret/-/merge_requests/85"&gt;Remove autotools config file&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;This merge request removes a left over &lt;code&gt;autotools&lt;/code&gt; configuration file.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;merged:&lt;/code&gt;&lt;/strong&gt; &lt;a href="https://gitlab.gnome.org/GNOME/libsecret/-/merge_requests/69"&gt;Enable static analyzer in CI&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Enables two static code analyzers: &lt;code&gt;clang-analyzer&lt;/code&gt; and &lt;code&gt;cppcheck&lt;/code&gt; inside the CI environment.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;merged:&lt;/code&gt;&lt;/strong&gt; &lt;a href="https://gitlab.gnome.org/GNOME/libsecret/-/merge_requests/73"&gt;Fix issues flagged by static analyzers&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Related to the above merge request. This merge request fixes the issues flagged by &lt;code&gt;clang-analyzer&lt;/code&gt;, &lt;code&gt;cppcheck&lt;/code&gt; static analyzers.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;merged:&lt;/code&gt;&lt;/strong&gt; &lt;a href="https://gitlab.gnome.org/GNOME/libsecret/-/merge_requests/70"&gt;Add bash-completion for secret-tool&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;This merge request adds the &lt;code&gt;bash-completion&lt;/code&gt; to &lt;code&gt;secret-tool&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;merged:&lt;/code&gt;&lt;/strong&gt; &lt;a href="https://gitlab.gnome.org/GNOME/libsecret/-/merge_requests/72"&gt;Add meson option to override default bashcompdir&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Related to the above merge request. This merge request adds a new &lt;code&gt;meson&lt;/code&gt; option to disable installation of completion files into the system location.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;merged:&lt;/code&gt;&lt;/strong&gt; &lt;a href="https://gitlab.gnome.org/GNOME/libsecret/-/merge_requests/71"&gt;Trivial Fix: removes a comment&lt;/a&gt;&lt;/p&gt;
&lt;h4&gt;Closing thoughts:&lt;/h4&gt;
&lt;p&gt;I have many things to say. So, I'll start with the internship experience,&lt;/p&gt;
&lt;p&gt;During my internship period I was able to accomplish many things. Completion of the project &lt;strong&gt;11&lt;/strong&gt; days before the deadline is at the top. Honestly, I'm not a coding genius or anything. I was able to do this because, of my mentors &lt;a href="https://github.com/ueno"&gt;Daiki Ueno&lt;/a&gt; and &lt;a href="https://github.com/ansasaki"&gt;Anderson Sasaki&lt;/a&gt;. They both have dedicated an enormous amount of their time every single day to help with my questions. Yes, every single day. They even helped me to prepare for my very first presentation. As a student from an online peer learning based university (UoPeople) I don't get to learn from a professor/instructor. Talking with my GSoC mentors was the closest professor, student experience I ever had. So, I'm truly grateful for their support and guidance. I couldn't have done any of these without their guidance. Also, I would very much like to thank, upstream TSS developers for helping me out with all things related to TPMs. And thank you GNOME GSoC admins.&lt;/p&gt;
&lt;p&gt;As for the things I have learned during the internship,&lt;/p&gt;
&lt;p&gt;In my early stage of the internship, I knew nothing about libsecret, computer security, cryptography or TPMs. I just knew some C programming. So, I had to learn everything related to the project while contributing. Very recently I got to learn about C memory issues/memory leaks. Finding memory leaks and fixing them was a fun experience. I don't get why many engineers complains about them everyday on Hacker News :) Also, I got to learn about the aspects of a software engineering job. Like how/when they work and what's their day to day workflow is like, code reviews ... Overall, I think it's more than fair to say that I have learned a great deal of many things from my GSoC internship.&lt;/p&gt;
&lt;p&gt;So, If you're a someone who's thinking about applying for the next iteration of GSoC. Go ahead, it will most certainly will make a huge impact on you. I guarantee it.&lt;/p&gt;</content><category term="Internship"></category></entry><entry><title>GSoC 21: GNOME/libsecret project update</title><link href="https://dnuka.github.io/gsoc21-internship-update.html" rel="alternate"></link><published>2021-08-09T19:50:00+05:30</published><updated>2021-08-09T19:50:00+05:30</updated><author><name>dnuka</name></author><id>tag:dnuka.github.io,2021-08-09:/gsoc21-internship-update.html</id><summary type="html">&lt;p&gt;I have a plenty of stuff to talk about. But, first let's talk about my GSoC &lt;a href="https://dnuka.github.io/gsoc21-internship.html"&gt;project&lt;/a&gt; update.&lt;/p&gt;
&lt;h4&gt;Project update:&lt;/h4&gt;
&lt;p&gt;As of now I'm two weeks away from GSoC final project evaluation deadline (August 23rd). So, I'm a bit late for the project update blog post. A quick reminder, my â€¦&lt;/p&gt;</summary><content type="html">&lt;p&gt;I have a plenty of stuff to talk about. But, first let's talk about my GSoC &lt;a href="https://dnuka.github.io/gsoc21-internship.html"&gt;project&lt;/a&gt; update.&lt;/p&gt;
&lt;h4&gt;Project update:&lt;/h4&gt;
&lt;p&gt;As of now I'm two weeks away from GSoC final project evaluation deadline (August 23rd). So, I'm a bit late for the project update blog post. A quick reminder, my &lt;a href="https://gitlab.gnome.org/Teams/Engagement/gsoc-2021/-/issues/13"&gt;project&lt;/a&gt; is to integrate Trusted platform module (TPM) support into GNOME/&lt;a href="https://wiki.gnome.org/Projects/Libsecret"&gt;libsecret&lt;/a&gt;. I'm happy to report that 95% of the work are completed and &lt;a href="https://gitlab.gnome.org/GNOME/libsecret/-/merge_requests/90"&gt;integration&lt;/a&gt; is the only part that remains.&lt;/p&gt;
&lt;p&gt;Recently, I gave my very first talk regarding the very same topic; libsecret project update. You can find it from &lt;a href="https://youtu.be/DjmL5YbcPEQ?t=6178"&gt;here&lt;/a&gt;. As well as the slides from &lt;a href="https://dnuka.github.io/slides/libsecret-project-update-by-Dhanuka.pdf"&gt;here&lt;/a&gt; if you're interested.&lt;/p&gt;
&lt;p&gt;My work is focused on libsecret's local storage (file-backend). Which is a new feature that allows a user to store secrets in a file. Current libsecret file-backend design support two options to encrypt the secrets/passwords inside the file database (a file). Option one is only for test purposes. And option two is using the user's login password to encrypt the file database. This design has a single point of failure. If the user's login password get compromised, then the contents of the file database get compromised too. This situation could be improved if the password is protected by hardware. So, that's when a TPM comes into play. A TPM is a physical hardware security module that performs everyday cryptographic needs. To simply put, my work is to add a third option to libsecret's file-backend design that adds TPM support. With this in place, if an attacker needs to get hold of your secrets, then they must have physical access to your computer system. In most cases this an impossible situation.&lt;/p&gt;
&lt;p&gt;There are three APIs (API levels based on the abstraction) to work with a TPM. For our specific needs, we have &lt;a href="https://gitlab.gnome.org/GNOME/libsecret/-/issues/63"&gt;decided&lt;/a&gt; to work with the TSS Enhanced System API (ESAPI).&lt;/p&gt;
&lt;p&gt;The following is the proposed public API,&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;EggTpm2Context *egg_tpm2_initialize               (GError **);
void           egg_tpm2_finalize                  (EggTpm2Context *);
GBytes         *egg_tpm2_generate_master_password (EggTpm2Context *,
                                                   GError **);
GBytes         *egg_tpm2_decrypt_master_password  (EggTpm2Context *,
                                                   GBytes *,
                                                   GError **);             
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Don't worry about &lt;code&gt;egg_&lt;/code&gt; prefix. It means the API and its implementations are in the &lt;a href="https://gitlab.gnome.org/GNOME/libsecret/-/tree/master/egg"&gt;incubation&lt;/a&gt; area. A place where newest/proposed features get included until they become a part of the official libsecret API or other GNOME libraries. Folks who have access to a TPM can test out these new changes by building from the &lt;a href="https://gitlab.gnome.org/GNOME/libsecret/"&gt;source&lt;/a&gt;.&lt;/p&gt;
&lt;h4&gt;Lessons learned:&lt;/h4&gt;
&lt;p&gt;In my early days of the internship, I have struggled a lot. Due to lack of TPM learning and API resources. I was at a stage where I couldn't even write a single line of code for days. That's when my mentors suggested to work on a &lt;a href="https://github.com/dnuka/tpmsecret"&gt;toy project&lt;/a&gt;. It was a huge success. So, when you're stuck with a complicated project, work on a minimal toy project.&lt;/p&gt;
&lt;p&gt;Always work with a design doc (a simple diagram). A design doc is a simple diagram that showcase what needs to implemented. It doesn't have to be long or a fancy one. Just include enough information to get started and update as you move forward.&lt;/p&gt;
&lt;p&gt;Apart from programming language proficiency. Git proficiency is a must. A lot of day to day programming related stress could be avoided if you're proficient in Git. So, learn Git thoroughly.&lt;/p&gt;
&lt;p&gt;Remember to include your contact information in your presentation slides.&lt;/p&gt;
&lt;p&gt;Stay tuned for my last GSoC blog post.&lt;/p&gt;</content><category term="Internship"></category></entry><entry><title>GSoC 21: Contributing to Gnome libsecret</title><link href="https://dnuka.github.io/gsoc21-internship.html" rel="alternate"></link><published>2021-06-20T18:50:00+05:30</published><updated>2021-06-20T18:50:00+05:30</updated><author><name>dnuka</name></author><id>tag:dnuka.github.io,2021-06-20:/gsoc21-internship.html</id><summary type="html">&lt;p&gt;Iâ€™m one of the Google Summer of Code (GSoC 2021) &lt;a href="https://summerofcode.withgoogle.com/organizations/5276176043474944/"&gt;interns&lt;/a&gt; contributing to the GNOME Foundation. And I'm contributing to the &lt;a href="https://gitlab.gnome.org/GNOME/libsecret/"&gt;libsecret&lt;/a&gt; project.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;libsecret is a library for storing and retrieving passwords and other secrets. It communicates with the "Secret Service" using DBus - &lt;a href="https://developer.gnome.org/libsecret/"&gt;gnome.org&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;To simply put, libsecret â€¦&lt;/p&gt;</summary><content type="html">&lt;p&gt;Iâ€™m one of the Google Summer of Code (GSoC 2021) &lt;a href="https://summerofcode.withgoogle.com/organizations/5276176043474944/"&gt;interns&lt;/a&gt; contributing to the GNOME Foundation. And I'm contributing to the &lt;a href="https://gitlab.gnome.org/GNOME/libsecret/"&gt;libsecret&lt;/a&gt; project.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;libsecret is a library for storing and retrieving passwords and other secrets. It communicates with the "Secret Service" using DBus - &lt;a href="https://developer.gnome.org/libsecret/"&gt;gnome.org&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;To simply put, libsecret is a credential/secret/password manager. libsecret has a feature that you can use to store secrets in a file database or simply a file. This file is encrypted. And the key to encrypt this file is derived from the user's login password. This not an ideal situation. Because, the entire security of the file database relies on the user's login password. This situation can be improved if the key[s] are protected by hardware. This is when a &lt;a href="https://en.wikipedia.org/wiki/Trusted_Platform_Module"&gt;TPM&lt;/a&gt; comes into play.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Trusted Platform Module (TPM, also known as ISO/IEC 11889) is an international standard for a secure cryptoprocessor, a dedicated microcontroller designed to secure hardware through integrated cryptographic keys - &lt;a href="https://en.wikipedia.org/wiki/Trusted_Platform_Module"&gt;Wikipedia&lt;/a&gt;.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;If you don't know anything about the TPMs I'd recommend watching, &lt;a href="https://www.youtube.com/watch?v=XwaSyHJIos8"&gt;Using the TPM - It's Not Rocket Science (Anymore) - Johannes Holland &amp;amp; Peter Huewe&lt;/a&gt; talk on YouTube. TPM is a fantastic tool for everyday cryptographic scenarios. And it's not that hard to use thanks to &lt;a href="https://github.com/tpm2-software/tpm2-tools"&gt;tpm2-tools&lt;/a&gt;. However, talking to a TPM via an API (or simply TPM programming) is not that simple. Actually, it's very similar to rocket science :) And there are no books or good developer resources on TPM programming. The lack of programming resources is a frustrating experience. However, the TPM developer community is fantastic. They have been helping me since day one.&lt;/p&gt;
&lt;p&gt;In simple terms, my goal is to &lt;a href="https://gitlab.gnome.org/Teams/Engagement/gsoc-2021/-/issues/13"&gt;extend&lt;/a&gt; current libsecret file database encryption-decryption functionality to work with a TPM. So, the TPM will handle key generation, wrapping-unwrapping of keys and key storage processes. This is very exciting work! Honestly, this was not the case in my early stage of contributing to libsecret. I knew nothing about libsecret, computer security, cryptography or TPMs. Thanks to both my mentors and upstream &lt;a href="https://github.com/tpm2-software/tpm2-tss"&gt;TSS&lt;/a&gt; (TPM Software Stack) developers, I'm confidently finding my way around the project. So, thank you &lt;a href="https://github.com/ueno"&gt;Daiki Ueno&lt;/a&gt; for guiding me through every step of the way from my initial contribution to making my final project proposal for GSoC. And thank you &lt;a href="https://github.com/ansasaki"&gt;Anderson Sasaki&lt;/a&gt; for helping me out with my questions every single day. Also, I would very much like to thank, upstream TSS developers &lt;a href="https://github.com/PeterHuewe"&gt;Peter Huewe&lt;/a&gt;, &lt;a href="https://github.com/flihp"&gt;Philip Tricca&lt;/a&gt; and &lt;a href="https://github.com/AndreasFuchsSIT"&gt;Andreas Fuchs&lt;/a&gt; for helping me out with all things related to TPMs.&lt;/p&gt;
&lt;p&gt;Stay tuned for my next blog post, "Hello World TPM!".&lt;/p&gt;</content><category term="Internship"></category></entry><entry><title>Ansible, Redfish and Sushy</title><link href="https://dnuka.github.io/openstack-project.html" rel="alternate"></link><published>2019-01-16T22:27:00+05:30</published><updated>2019-01-16T22:27:00+05:30</updated><author><name>dnuka</name></author><id>tag:dnuka.github.io,2019-01-16:/openstack-project.html</id><summary type="html">&lt;p&gt;In last December(2018), I started my Outreachy [1] internship at OpenStack working on "Create Redfish Ansible module" project. So, this is me trying to explain my project to someone completely new to this. Here goes,&lt;/p&gt;
&lt;p&gt;Ansible...&lt;/p&gt;
&lt;p&gt;IT automation includes processes and software that help in deploying and managing an â€¦&lt;/p&gt;</summary><content type="html">&lt;p&gt;In last December(2018), I started my Outreachy [1] internship at OpenStack working on "Create Redfish Ansible module" project. So, this is me trying to explain my project to someone completely new to this. Here goes,&lt;/p&gt;
&lt;p&gt;Ansible...&lt;/p&gt;
&lt;p&gt;IT automation includes processes and software that help in deploying and managing an IT infrastructure(servers, networking, storage, etc.). In short, Ansible [2] is a simple, agent-less and powerful open source IT automation tool. It uses a very simple language YAML [3] (YAML Ain't Markup Language) in form of &lt;code&gt;playbooks&lt;/code&gt; that allow you to describe your automation tasks in a way that approaches plain English. Also, Ansible doesnâ€™t require any agent on client machines unlike other automation tools(Puppet, Chef, Salt). It uses just a SSH connection to connect the servers. Ansible requires Python to be installed on the client machines.&lt;/p&gt;
&lt;p&gt;Bellow a simple Ansible playbook(&lt;code&gt;install_apache.yaml&lt;/code&gt;) to install Apache HTTP Server on a Debian based remote server.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;- hosts: all
  remote_user: root
  tasks:
    - name: Install Apache
      apt:
        name: apache2
        state: latest
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;To execute the playbook on a single server, you can use this command: &lt;code&gt;ansible-playbook -i 100.58.17.57, install_apache.yaml&lt;/code&gt;.
If you have 100 or more remote servers and you want to install &lt;code&gt;apache2&lt;/code&gt; on each of them, with Ansible you can automate this repetitive task using that same command. First, put remote IP addresses on a file(&lt;code&gt;HOSTS&lt;/code&gt;) and then execute &lt;code&gt;ansible-playbook -i HOSTS install_apache.yaml&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Redfish...&lt;/p&gt;
&lt;p&gt;If youâ€™re very much new to Cloud infrastructure related topics, just like me, you have probably never heard of the BMC [4] (baseboard management controller). BMC is a small computer that sits on every server motherboard and it's used to perform remote management tasks that a sysadmin would otherwise need to physically do on the racked server(power-on, reset, etc.). In shot, Redfish [5] is one of the newest protocols used to interact with the BMC. Redfish leverages common internet and web services standard to expose information directly to the modern tool chain. Redfish specifies a RESTFul [6] interface and utilizes defined JSON payloads, usable by client applications and browser based GUI.
Following Python code sample shows how to retrieve the serial number from a remote server using Redfish.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;json&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;urllib.request&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;urlopen&lt;/span&gt;

&lt;span class="n"&gt;data&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;urlopen&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;http://100.58.17.57/redfish/v1/Systems/1&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;json_data&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;json&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;loads&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;json_data&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;SerialNumber&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Sushy and Sushy-tools...&lt;/p&gt;
&lt;p&gt;Sushy [7] is a client side Python implementation of the Redfish protocol and and it can be used to communicate with Redfish based systems.&lt;/p&gt;
&lt;p&gt;Sushy-tools [8] contains two emulators &lt;code&gt;sushy-static&lt;/code&gt; and &lt;code&gt;sushy-emulator&lt;/code&gt;, aiming at supporting the development and testing of the Redfish protocol implementations, in particular Sushy library. To simply put, Sushy-tools are the Redfish emulators(just like an Android emulator).&lt;/p&gt;
&lt;p&gt;The Project...&lt;/p&gt;
&lt;p&gt;From the previous &lt;code&gt;install_apache.yaml&lt;/code&gt; example(at &lt;code&gt;line 5&lt;/code&gt;) I'm using the &lt;code&gt;apt&lt;/code&gt; Ansible module. Ansible &lt;code&gt;modules&lt;/code&gt; are just piece of code that can be
written in any language(but mostly written in Python) with the condition that its output needs to be in the &lt;code&gt;JSON&lt;/code&gt; format. My project is to create a new custom Redfish, Ansible module to automate the power and boot process of a remote server and to make sure those features work correctly on both module side and in the &lt;code&gt;sushy-emulator&lt;/code&gt;. Also, update existing Redfish, Ansible modules [9], [10] to work properly in the &lt;code&gt;sushy-emulator&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;[1] &lt;a href="https://dnuka.github.io/openstack-internship.html"&gt;https://dnuka.github.io/openstack-internship.html&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;[2] &lt;a href="https://github.com/ansible/ansible"&gt;https://github.com/ansible/ansible&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;[3] &lt;a href="https://yaml.org/"&gt;https://yaml.org/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;[4] &lt;a href="https://en.wikipedia.org/wiki/Intelligent_Platform_Management_Interface#Baseboard_management_controller"&gt;https://en.wikipedia.org/wiki/Intelligent_Platform_Management_Interface#Baseboard_management_controller&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;[5] &lt;a href="https://www.dmtf.org/standards/redfish"&gt;https://www.dmtf.org/standards/redfish&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;[6] &lt;a href="https://www.codecademy.com/articles/what-is-rest"&gt;https://www.codecademy.com/articles/what-is-rest&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;[7] &lt;a href="https://github.com/openstack/sushy"&gt;https://github.com/openstack/sushy&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;[8] &lt;a href="https://github.com/openstack/sushy-tools"&gt;https://github.com/openstack/sushy-tools&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;[9] &lt;a href="https://github.com/ansible/ansible/tree/devel/lib/ansible/modules/remote_management/redfish"&gt;https://github.com/ansible/ansible/tree/devel/lib/ansible/modules/remote_management/redfish&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;[10] &lt;a href="https://github.com/ansible/ansible/blob/devel/lib/ansible/module_utils/redfish_utils.py"&gt;https://github.com/ansible/ansible/blob/devel/lib/ansible/module_utils/redfish_utils.py&lt;/a&gt;&lt;/p&gt;</content><category term="Internship"></category></entry><entry><title>How I got my internship at OpenStack</title><link href="https://dnuka.github.io/openstack-internship.html" rel="alternate"></link><published>2018-12-14T20:53:00+05:30</published><updated>2018-12-14T20:53:00+05:30</updated><author><name>dnuka</name></author><id>tag:dnuka.github.io,2018-12-14:/openstack-internship.html</id><summary type="html">&lt;p&gt;Folks, this is the story of, how I become one of 46 interns of &lt;a href="https://www.outreachy.org"&gt;Outreachy&lt;/a&gt; December 2018 to March 2019 round. English is not my mother tongue; please excuse any errors.&lt;/p&gt;
&lt;p&gt;A little background...&lt;/p&gt;
&lt;p&gt;My name is Dhanuka. I'm a 24 year old, self-taught software developer from Sri Lanka. What â€¦&lt;/p&gt;</summary><content type="html">&lt;p&gt;Folks, this is the story of, how I become one of 46 interns of &lt;a href="https://www.outreachy.org"&gt;Outreachy&lt;/a&gt; December 2018 to March 2019 round. English is not my mother tongue; please excuse any errors.&lt;/p&gt;
&lt;p&gt;A little background...&lt;/p&gt;
&lt;p&gt;My name is Dhanuka. I'm a 24 year old, self-taught software developer from Sri Lanka. What inspired me to get into Computer science and programming was the &lt;a href="https://www.scotthyoung.com/blog/myprojects/mit-challenge-2/"&gt;MIT Challenge&lt;/a&gt;. And also reading about the achievements of self-taught software developers from around the world. According to my &lt;a href="https://stackoverflow.com/users/4533771/dhanuka?tab=profile"&gt;stackoverflow&lt;/a&gt; I have been coding for more than three years. But, I could not get a single entry-level job or an internship. It's impossible to get a job at a tech company without a degree in Sri Lanka. All the internships and hackathons were only open to university students. Along the way, I had to take different jobs to provide for my family. My last job(two months back), I was a receptionist at a local hotel. It's not a good life to live. I always knew I could do something better with my life.&lt;/p&gt;
&lt;p&gt;My first hackathon...&lt;/p&gt;
&lt;p&gt;I was almost already given up on my goals. I didn't have anyways to get some professional experience. Last May, I got to know about &lt;a href="https://mozilla.github.io/global-sprint/"&gt;Mozilla's Global Sprint&lt;/a&gt;. An open-source 48-hour hackathonâ€Š. Finally, something I could get in. Also, there was a local event, as usual, I could not get in :) But, I participated virtually anyway. So, the project I choose was a Python project. At that time I didn't know anything about Python. I was able to understand the basic Python syntax within 1-2 hours and how to setup the project. That's when I fall in love with the Python Programming language. And I made my first &lt;a href="https://github.com/ricklupton/floweaver/commit/a551e843110a3e27617b1d2a379a9179ceb056c7"&gt;pull request&lt;/a&gt;. At the end of the 48-hour hackathon, I was able to submit 3 PRs. I was very happy, that now I have 2 days of professional experience as a software developer. Also at the same time, I stumbled across Outreachy. Since then, I started to improve my Python skills and have been regularly checking the Outreachy's web site. Thinking about, "This is the perfect opportunity for someone like me. Will they give me a chance?"&lt;/p&gt;
&lt;p&gt;Applying to Outreachy...&lt;/p&gt;
&lt;p&gt;I had many doubts when submitting my initial application to Outreachy. Because, Previously Outreachy was only accepting Women, Transgender, Trans-men, genderqueer people and also my English writing is not that good. Finally, after 10 days of submitting my initial application I got, the conformation email from the Outreachy organizers, that I got in!! From this round Outreachy is open for all! Next is the project selection and contribution. So, I'm really interested in Computer Security and DevOps. When looking the project list, most of the projects were JavaScript. And really don't like JavaScript. It's just a personal preference. I like everything &lt;code&gt;noscript&lt;/code&gt;. So my choices were Git, Debian and OpenStack. So, I sent emails for mentors at those organizations. I got responses from everyone. It was very clear that mentors at the OpenStack were ready to accept contributions from Outreachy applicants, had created list of &lt;a href="https://storyboard.openstack.org/#!/story/2003853"&gt;tasks&lt;/a&gt; specially for the Outreachy applicant's so we can get familiar with OpenStack, specially with OpenStack &lt;a href="https://github.com/openstack/sushy"&gt;Sushy&lt;/a&gt; project and Redfish.&lt;/p&gt;
&lt;p&gt;Initial contribution to OpenStack...&lt;/p&gt;
&lt;p&gt;At first, I didn't know anything about the project. So I was terrified at first. My project is called Sushy, a Python library to communicate with Redfish based systems. When I started to contribute to the Sushy project, there was nothing much to set up on my side. You don't have to download or install too many things. And that's a good thing when you're a beginner. If you have Python installed on your system, you're pretty much good to go. Everything you need to know before contributing clearly documented &lt;a href="https://docs.openstack.org/infra/manual/developers.html"&gt;here&lt;/a&gt;. Still, I was afraid to make my first contribution. So, I had set up an IRC client and joined the &lt;code&gt;#openstack-ironic&lt;/code&gt; channel on Freenode. That's how I met my mentor &lt;a href="https://github.com/dtantsur"&gt;Dmitry Tantsur&lt;/a&gt;. I still remember that he was on a meeting that day, yet he answered every question I had and explained me the basics. With his guidance, I have submitted my very first &lt;a href="https://review.openstack.org/#/c/606125/"&gt;patch&lt;/a&gt;. Which added a String filed to a Python class and a bunch of unit testing to go with it. It was a very simple and small patch, for me it was a valuable learning experience and also a confidence builder. I learned about proper Git commit messages, Python unit testing, JSON schema.&lt;/p&gt;
&lt;p&gt;To complete the task &lt;code&gt;Product and ProtocolFeaturesSupported&lt;/code&gt;, one more patch was required. Also, I met my second mentor &lt;a href="https://github.com/etingof"&gt;Ilya Etingof&lt;/a&gt;. With the guidance of both my mentors, I have successfully completed my first task(2 patches). Outreachy requires at least one contribution to be eligible for the final application. At that time there were no any other Outreachy applicants contributing to the Sushy project. I was first. I was like, "I got this. That was easy" Also I had a full-time job as a receptionist. After a day later &lt;a href="https://twitter.com/gabrielasoriag"&gt;Gabriela Soria&lt;/a&gt; came along and submitted a much longer patch than me :) Then I was terrified, that I might miss this opportunity. You know like EMINEM said, "You only get one shot, opportunity comes once in a lifetime". The very next day I quit my job and started working on my second task. And then third and so on. By the time of final application deadline, I had submitted 7 &lt;a href="https://review.openstack.org/#/q/owner:%22Dhanuka+Warusadura%22+status:reviewed"&gt;patches&lt;/a&gt;. Nearly 1600 lines of code \o/.&lt;/p&gt;
&lt;p&gt;Victory day...&lt;/p&gt;
&lt;p&gt;It was really hard to wait for the results. Nov 16, Around 9:32 PM in Sri Lankan time, I got the email from the Outreachy organizers, "dnuka accepted for Outreachy". I have never ever felt this great before in my life. I think it was happiness. I didn't know what to do or what to say. I just picked up my motorcycle and driven away from home. I always knew that hard work pays off. But I have never experienced it before. When I got home, it was very early in the morning, I looked up the Outreachy &lt;a href="https://www.outreachy.org/alums/"&gt;alums&lt;/a&gt; page to see, who else got selected. Then there was Gabriela's name too. I was genuinely happy. We both made it! &lt;/p&gt;
&lt;p&gt;It's been only a few days, since the internship started. There's still a long way to go. Also, I'm planning to spend most of my stipend on putting myself through college. Possibly a part time Computer Science program.&lt;/p&gt;
&lt;p&gt;Final thoughts...&lt;/p&gt;
&lt;p&gt;I just want to thank my mentor, Ilya for all the advice that he gave me during the application period. I still remember very first advice he said to me "If you are motivated and persistent, you will definitely succeed". Also, I want to thank my mentor, Dmitry for guiding me through every step of the way from my initial contribution to making my final application. He also introduced me to the culture at the OpenStack Ironic team and Monday meetings. One of the things I really enjoy, saying good morning to everyone at the IRC channel. Also, I want to thank my friends at the OpenStack Ironic team. Specially &lt;a href="https://twitter.com/ashinclouds"&gt;Julia Kreger&lt;/a&gt;, Iury Gregory and Debayan Ray.&lt;/p&gt;
&lt;p&gt;A Big Thanks to &lt;a href="https://twitter.com/_sagesharp_"&gt;Sage Sharp&lt;/a&gt; and organizers at the Outreachy for creating this life-changing opportunity. Also, I want to thank our OpenStack coordinator &lt;a href="https://twitter.com/MahatiChamarthy"&gt;Mahati Chamarthy&lt;/a&gt; for the warm welcome to the OpenStack.&lt;/p&gt;
&lt;p&gt;You may be wondering why I did this; made this big article describing everything :) I just wanted to you to know that if I can do this, anyone out there struggling to get a job at tech, You can do definitely do this too. This is your opportunity; look no further than the &lt;a href="https://www.outreachy.org/"&gt;Outreachy&lt;/a&gt;.&lt;/p&gt;</content><category term="Internship"></category></entry></feed>